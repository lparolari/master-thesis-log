# -*- coding: utf-8 -*-
"""torch-maskedfill-grad.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cba8rqGCmrOFnAOa9QXK6xR2vrOZmOkR
"""

import torch
import torch.nn as nn

"""
Is the gradient computed on masked elements by PyTorch Autograd?

TL;DR
No, the gradient is not computed.
"""

X = torch.tensor([[0., 0.], [0., 1.], [1., 0.], [1., 1.]], requires_grad=True)  # [4, 2]
y = torch.tensor([0., 0., 0., 1.])  # [4]

def model(X):
    return X.sum(dim=-1)

criterion = nn.MSELoss()
optimizer = torch.optim.Adam([X], 0.001)

n_epochs = 10000

for e in range(n_epochs):
    out = model(X)
    out = torch.masked_fill(out, mask=torch.tensor([1, 1, 1, 1]) == 0, value=0)

    loss = criterion(out, y)
    # print("loss =", loss)

    # print(X.grad)
    
    loss.backward()

    # print(X)

    optimizer.step()

    # print(X)
    # print(X.grad)

    # input()
print(loss)
print(out)
print(X)
print(y)